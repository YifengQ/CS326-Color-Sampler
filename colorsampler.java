import javax.swing.*;
import java.awt.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.io.FileOutputStream;
import java.io.IOException;


public class colorsampler extends javax.swing.JFrame {

    public colorsampler() {
        initComponents();
    }

    public static String color[] = new String [50];
    public static int red[] = new int[50];
    public static int green[] = new int[50];
    public static int blue[] = new int[50];
    public static int saveRed[] = new int[50];
    public static int saveGreen[] = new int[50];
    public static int saveBlue[] = new int[50];
    public static int curr = 0;
    public static int top = 1;
    public static String title[] = new String[2];
    public static int titleIndex = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        minusRed = new javax.swing.JButton();
        plusRed = new javax.swing.JButton();
        minusGreen = new javax.swing.JButton();
        plusGreen = new javax.swing.JButton();
        minusBlue = new javax.swing.JButton();
        plusBlue = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Color Sampler");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setText("Red:");

        jLabel3.setText("Green:");

        jLabel4.setText("Blue:");

        jTextField2.setText(Integer.toString(green[top]));

        jTextField3.setText(Integer.toString(blue[top]));

        minusRed.setText("-");
        minusRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusRedActionPerformed(evt);
            }
        });

        plusRed.setText("+");
        plusRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusRedActionPerformed(evt);
            }
        });

        minusGreen.setText("-");
        minusGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusGreenActionPerformed(evt);
            }
        });

        plusGreen.setText("+");
        plusGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusGreenActionPerformed(evt);
            }
        });

        minusBlue.setText("-");
        minusBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusBlueActionPerformed(evt);
            }
        });

        plusBlue.setText("+");
        plusBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusBlueActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        jTextField4.setText(Integer.toString(red[top]));

        jList2.setModel(new javax.swing.DefaultListModel<String>() {
            String[] strings = { color[0],color[1],color[2],color[3],color[4],color[5],color[6],color[7], color[8],color[9],color[10]};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jPanel2.setBackground(new Color(red[top],green[top],blue[top]));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 209, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 193, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(minusRed)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(plusRed))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                .addComponent(minusBlue)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(plusBlue))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                .addComponent(minusGreen)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(plusGreen))))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(52, 52, 52)
                                                .addComponent(Save)
                                                .addGap(30, 30, 30)
                                                .addComponent(Reset))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(16, 16, 16)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(minusRed)
                                                        .addComponent(plusRed)
                                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(plusGreen)
                                                                .addComponent(minusGreen))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel3)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jLabel4)
                                                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(minusBlue)
                                                                        .addComponent(plusBlue))
                                                                .addGap(27, 27, 27)))
                                                .addGap(3, 3, 3)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(Save)
                                                        .addComponent(Reset))))
                                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>

    private void minusRedActionPerformed(java.awt.event.ActionEvent evt) {

        if(red[top] - 5 < 251 && red[top] + 5 > 5){
            red[top] -= 5;
            this.setTitle(title[1]);
        }

        jTextField4.setText(Integer.toString(red[top]));
        jPanel2.setBackground(new Color(red[top],green[top],blue[top]));

    }

    private void plusGreenActionPerformed(java.awt.event.ActionEvent evt) {

        if(green[top] + 5 > 4 && green[top] - 5 < 250){
            green[top] += 5;
            this.setTitle(title[1]);
        }

        jTextField2.setText(Integer.toString(green[top]));
        jPanel2.setBackground(new Color(red[top],green[top],blue[top]));

    }

    private void minusGreenActionPerformed(java.awt.event.ActionEvent evt) {

        if(green[top] + 5 > 5 && green[top] - 5 < 251){
            green[top] -= 5;
            this.setTitle(title[1]);
        }

        jTextField2.setText(Integer.toString(green[top]));
        jPanel2.setBackground(new Color(red[top],green[top],blue[top]));

    }

    private void minusBlueActionPerformed(java.awt.event.ActionEvent evt) {

        if(blue[top] + 5 > 5 && blue[top] - 5 < 251){
            blue[top] -= 5;
            this.setTitle(title[1]);
        }

        jTextField3.setText(Integer.toString(blue[top]));
        jPanel2.setBackground(new Color(red[top],green[top],blue[top]));

    }

    private void plusRedActionPerformed(java.awt.event.ActionEvent evt) {

        if(red[top] - 5 < 250 && red[top] + 5 > 4){
            red[top] += 5;
            this.setTitle(title[1]);
        }

        jTextField4.setText(Integer.toString(red[top]));
        jPanel2.setBackground(new Color(red[top],green[top],blue[top]));

    }

    private void plusBlueActionPerformed(java.awt.event.ActionEvent evt) {

        if(blue[top] + 5  > 4 && blue[top] - 5 < 250){
            blue[top] += 5;
            this.setTitle(title[1]);
        }

        jTextField3.setText(Integer.toString(blue[top]));
        jPanel2.setBackground(new Color(red[top],green[top],blue[top]));

    }

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {

        int index = jList2.getSelectedIndex();
        red[top] = red[curr];
        green[top] = green[curr];
        blue[top] = blue[curr];

        curr = index;

        color[top] = color[index];
        red[top] = red[index];
        green[top] = green[index];
        blue[top] = blue[index];

        jTextField4.setText(Integer.toString(red[top]));
        jTextField2.setText(Integer.toString(green[top]));
        jTextField3.setText(Integer.toString(blue[top]));

        jPanel2.setBackground(new Color(red[top],green[top],blue[top]));
    }

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {

        red[curr] = red[top];
        green[curr] = green[top];
        blue[curr] = blue[top];

        saveRed[curr] = red[top];
        saveGreen[curr] = green[top];
        saveBlue[curr] = blue[top];

        this.setTitle(title[0]);
    }

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {

        red[curr] = saveRed[curr];
        green[curr] = saveGreen[curr];
        blue[curr] = saveBlue[curr];

        color[top] = color[curr];
        red[top] = red[curr];
        green[top] = green[curr];
        blue[top] = blue[curr];

        jTextField4.setText(Integer.toString(red[top]));
        jTextField2.setText(Integer.toString(green[top]));
        jTextField3.setText(Integer.toString(blue[top]));

        jPanel2.setBackground(new Color(red[top],green[top],blue[top]));

        this.setTitle(title[0]);
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {

        FileOutputStream fos = null;
        File file;

        String tab = " ";
        String newLine = System.getProperty("line.separator");

        try {
            //Specify the file path here
            file = new File("C:\\Users\\Yifen\\Desktop\\New folder\\myfile.txt");
            fos = new FileOutputStream(file);

            if (!file.exists()) {
                file.createNewFile();
            }


            for(int i = 0; i < top - 1 ; i++){

                String fColor = color[i];
                String fRed = Integer.toString(red[i]);
                String fGreen = Integer.toString(green[i]);
                String fBlue = Integer.toString(blue[i]);

                byte[] bytesColor = fColor.getBytes();
                byte[] bytesRed = fRed.getBytes();
                byte[] bytesGreen = fGreen.getBytes();
                byte[] bytesBlue = fBlue.getBytes();
                byte[] bytesTab = tab.getBytes();
                byte[] bytesNewLine = newLine.getBytes();

                fos.write(bytesColor);
                fos.write(bytesTab);
                fos.write(bytesRed);
                fos.write(bytesTab);
                fos.write(bytesGreen);
                fos.write(bytesTab);
                fos.write(bytesBlue);
                fos.write(bytesNewLine);
            }

            fos.flush();
            System.out.println("File Written Successfully");
        }
        catch (IOException ioe) {
            ioe.printStackTrace();
        }
        finally {
            try {
                if (fos != null)
                {
                    fos.close();
                }
            }
            catch (IOException ioe) {
                System.out.println("Error in closing the Stream");
            }
        }

    }

    public static void main(String args[]) {

        //Specify the file path here
        File fileName= new File("C:\\Users\\Yifen\\Desktop\\New folder\\myfile.txt");

        Scanner scan = null;

        title[0]= "Color Sampler";
        title[1]= "Color Sampler*";

        try{
            scan = new Scanner (fileName);
            int counter= 0;
            while(scan.hasNext()){
                color[counter] = scan.next();
                red[counter] = scan.nextInt();
                green[counter] = scan.nextInt();
                blue[counter] = scan.nextInt();

                saveRed[counter] = red[counter];
                saveBlue[counter] = blue[counter];
                saveGreen[counter] = green[counter];
                counter++;
                top++;

            }
        }catch (FileNotFoundException e){
            e.printStackTrace();
        }

        color[top] = color[curr];
        red[top] = red[curr];
        green[top] = green[curr];
        blue[top] = blue[curr];

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(colorsampler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(colorsampler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(colorsampler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(colorsampler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new colorsampler().setVisible(true);
            }
        });

    }

    private javax.swing.JButton Reset;
    private javax.swing.JButton Save;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton minusBlue;
    private javax.swing.JButton minusGreen;
    private javax.swing.JButton minusRed;
    private javax.swing.JButton plusBlue;
    private javax.swing.JButton plusGreen;
    private javax.swing.JButton plusRed;
}
